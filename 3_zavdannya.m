X = [-1.5  1.5 -1.5  1.5 -1.5  1.5 -1.5  1.5; ...
     -1.5 -1.5  1.5  1.5 -1.5 -1.5  1.5  1.5; ...
     -1.5 -1.5 -1.5 -1.5  1.5  1.5  1.5  1.5]; % Вхідні вектори (3x8)

T = [1 0 0 0 1 1 1 0]; % Цільові класи (1x8)

% Нормування даних до інтервалу [0,1]
X_max = max(abs(X), [], 2);   % Максимум по кожній ознаці
X_normalized = X ./ X_max;   % Нормування

% Створення персептрона
net = perceptron;
net.layers{1}.transferFcn = 'hardlim';           % Функція активації
net.inputWeights{1,1}.learnFcn = 'learnpn';      % Навчальне правило
net.trainParam.epochs = 1000;                    % Максимальна кількість епох

% Навчання мережі
net = train(net, X_normalized, T);

% Класифікація
Y = sim(net, X_normalized); % Вихід мережі

% Виведення результатів
disp('Результати класифікації (тривимірні образи):');
disp(Y);

disp('Цільові класи:');
disp(T);